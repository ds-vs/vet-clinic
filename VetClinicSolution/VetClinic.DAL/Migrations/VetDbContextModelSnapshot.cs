// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VetClinic.DAL;

#nullable disable

namespace VetClinic.DAL.Migrations
{
    [DbContext(typeof(VetClinicDbContext))]
    partial class VetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VetClinic.Domain.Entity.GenderVariant", b =>
                {
                    b.Property<int>("GenderVariantId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GenderVariantId");

                    b.ToTable("GenderVariant");

                    b.HasData(
                        new
                        {
                            GenderVariantId = 0,
                            Name = "Male"
                        },
                        new
                        {
                            GenderVariantId = 1,
                            Name = "Female"
                        },
                        new
                        {
                            GenderVariantId = 2,
                            Name = "Сastrato"
                        });
                });

            modelBuilder.Entity("VetClinic.Domain.Entity.PetOwnerEntity", b =>
                {
                    b.Property<long>("PetOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PetOwnerId"));

                    b.Property<string>("Building")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Flat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PetOwnerId");

                    b.ToTable("PetOwners");
                });

            modelBuilder.Entity("VetClinic.Domain.Entity.VetPassportEntity", b =>
                {
                    b.Property<long>("VetPassportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("VetPassportId"));

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GenderVariantId")
                        .HasColumnType("integer");

                    b.Property<string>("LocationOfMicrochip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("MicrochipDate")
                        .HasColumnType("date");

                    b.Property<long>("MicrochipNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("PetOwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("SpecialSigns")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("VetPassportId");

                    b.HasIndex("GenderVariantId");

                    b.HasIndex("PetOwnerId");

                    b.ToTable("VetPassports");
                });

            modelBuilder.Entity("VetClinic.Domain.Entity.VetPassportEntity", b =>
                {
                    b.HasOne("VetClinic.Domain.Entity.GenderVariant", "GenderVariant")
                        .WithMany()
                        .HasForeignKey("GenderVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetClinic.Domain.Entity.PetOwnerEntity", "PetOwner")
                        .WithMany()
                        .HasForeignKey("PetOwnerId");

                    b.Navigation("GenderVariant");

                    b.Navigation("PetOwner");
                });
#pragma warning restore 612, 618
        }
    }
}
